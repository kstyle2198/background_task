version: '3.8' # 버전을 명시하는 것이 좋습니다.

services:
  # Redis 서비스: 변경 없음. 훌륭합니다.
  redis:
    container_name: prod_redis
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      # [개선 ③] 명시적 네트워크 사용
      - prod-network
    restart: unless-stopped

  # [개선 ①] 
  # redis-commander는 프로덕션에서 제거하거나,
  # 127.0.0.1 (localhost)에서만 접근하도록 변경하는 것을 강력히 권장합니다.
  redis-commander:
    container_name: prod_redis_monitor
    image: rediscommander/redis-commander
    ports:
      # [개선 ①] 외부 노출 대신 서버 내부에서만 접근
      - "127.0.0.1:8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      # [개선 ③]
      - prod-network
    restart: unless-stopped
    depends_on:
      - redis

  # Celery 워커 서비스: 변경 없음.
  worker:
    container_name: prod_worker
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - ./.env.prod
    networks:
      # [개선 ③]
      - prod-network
    restart: unless-stopped
    depends_on:
      - redis # 워커는 redis에만 의존합니다.

  # FastAPI 서비스: gunicorn 사용
  fastapi:
    container_name: prod_fastapi
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    networks:
      # [개선 ③]
      - prod-network
    restart: unless-stopped
    depends_on:
      - redis # [개선 ②] worker 의존성 제거. redis만 필요합니다.

# [개선 ③] 네트워크 정의
networks:
  prod-network:
    driver: bridge

# Redis 데이터 영속성을 위한 볼륨 정의
volumes:
  redis-data:
